--donor table
CREATE TABLE Donor (
    donor_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    donor_name VARCHAR2(100),
    gender CHAR(1),
    age NUMBER,
    blood_group VARCHAR2(3),
    contact_phone VARCHAR2(15),
    contact_email VARCHAR2(100),
    donor_address VARCHAR2(255),
    last_donation_date DATE
);

--blood donation table
CREATE TABLE BloodDonation (
    donation_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    donor_id NUMBER,
    blood_group VARCHAR2(3),
    donation_date DATE,
    volume NUMBER, -- in mL
    CONSTRAINT fk_donor
        FOREIGN KEY (donor_id) 
        REFERENCES Donor(donor_id)
);

--inventory table, 1unit=500ml
CREATE TABLE BloodInventory (
    inventory_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    blood_group VARCHAR2(3),
    units_available NUMBER,
    expiry_date DATE
);

--hospital table
CREATE TABLE Hospital (
    hospital_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    hospital_name VARCHAR2(100),
    password VARCHAR2(100),
    hospital_address VARCHAR2(255),
    contact_phone VARCHAR2(15),
    contact_email VARCHAR2(100)
);

--request table , 'Y' for yes, 'N' for no
CREATE TABLE BloodRequest (
    request_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    hospital_id NUMBER,
    blood_group VARCHAR2(3),
    units_requested NUMBER,
    request_date DATE,
    fulfilled CHAR(1) DEFAULT 'N', 
    CONSTRAINT fk_hospital
        FOREIGN KEY (hospital_id) 
        REFERENCES Hospital(hospital_id)
);
